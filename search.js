window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"reserves_demand": {"fullname": "reserves_demand", "modulename": "reserves_demand", "kind": "module", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit": {"fullname": "reserves_demand.curve_nparam_fit", "modulename": "reserves_demand.curve_nparam_fit", "kind": "module", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit", "kind": "class", "doc": "<p>This class is used to fit a non-parametric curve to a dataset using two different models:</p>\n\n<ul>\n<li>Generalized Additive Models (GAM) with splines</li>\n<li>Random Forest</li>\n</ul>\n\n<p>In a cross-validation setting, the class compares the performance of the two models based on a specified metric.\n    - The GAM models test different model types for curve fitting (linear, logistic, gamma) and different number of splines, \nthen picks the best model.\n    - The Random Forest model tests different hyperparameters (n_estimators, max_depth, min_samples_split, min_samples_leaf), \nthen picks the best model.</p>\n\n<p>Finally, the class compares the best GAM model with the best Random Forest model based on the specified metric, and chooses the best model.\nForecasting can be done either using the best model, or the best set-up for the GAM and Random Forest model families. \nThe class provides a method to plot the best model's predictions.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<ul>\n<li>data (pd.DataFrame): The dataset to fit the curve to.</li>\n<li>dep_var (str): The dependent variable to predict.</li>\n<li>main_indep_var (str): The main independent variable to use for curve fitting.</li>\n<li>dep_var_name (str): The name of the dependent variable.</li>\n<li>main_indep_var_name (str): The name of the main independent variable.</li>\n<li>nFolds (int): The number of folds to use in cross-validation.</li>\n</ul>\n\n<h2 id=\"methods\">Methods:</h2>\n\n<ul>\n<li>tune_gam(param_grid=None, verbose=False): Tune the GAM model using GridSearchCV.</li>\n<li>tune_rf(param_grid=None, verbose=False): Tune the Random Forest model using GridSearchCV.</li>\n<li>compare_models(on='RMSE', verbose=True, plot=True): Compare the performance of GAM and Random Forest models based on a specified metric.</li>\n<li>predict_best(model, X=None): Predict the best model's output.</li>\n<li>plot_x_y(title=''): Plot the dependent variable y against all the independent variables x.</li>\n<li>plot_best(title='Best Model Predictions'): Plot the best model's predictions for both the Random Forest and GAM models families.</li>\n</ul>\n\n<h2 id=\"attributes\">Attributes:</h2>\n\n<ul>\n<li>best_gam: The best GAM model found.</li>\n<li>best_rf: The best Random Forest model found.</li>\n<li>best_model: The best model found based on the specified metric.</li>\n<li>best_model_type: The best model type found based on the specified metric.</li>\n</ul>\n\n<h2 id=\"raises\">Raises:</h2>\n\n<ul>\n<li>AssertionError: If the data is not a DataFrame, or if the dependent or independent variables are not found in the dataset.</li>\n</ul>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nFolds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span>)</span>"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.best_gam", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.best_rf", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.best_model", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.best_model_type", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.tune_gam", "kind": "function", "doc": "<p>A function to tune the GAM model using GridSearchCV.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>param_grid: dict, default=None\n    A dictionary containing the hyperparameters to tune. If None, the function will test different model types,\n    number of splines, and regularization parameters.\nverbose: bool, default=False\n    If True, prints the best parameters found and the best score from GridSearchCV.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>opt_param: dict\n    The optimal parameters found by GridSearchCV.\ntrain_metrics: dict\n    The performance metrics on the training set.\nval_metrics: dict\n    The performance metrics on the validation set.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_grid</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.tune_rf", "kind": "function", "doc": "<p>A function to tune the Random Forest model using GridSearchCV.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>param_grid: dict, default=None\n    A dictionary containing the hyperparameters to tune. If None, the function will test different n_estimators,\n    max_depth, min_samples_split, and min_samples_leaf.\nverbose: bool, default=False\n    If True, prints the best parameters found and the best score from GridSearchCV.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>opt_param: dict\n    The optimal parameters found by GridSearchCV.\ntrain_metrics: dict\n    The performance metrics on the training set.\nval_metrics: dict\n    The performance metrics on the validation set.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_grid</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.compare_models", "kind": "function", "doc": "<p>A function to compare the performance of GAM and Random Forest models based on a specified metric.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>on: str, default='RMSE'\n    The metric to compare the models on. Options: 'RMSE', 'MAE', 'R2'\nverbose: bool, default=True\n    If True, prints the best model based on the specified metric and the comparison results.\nplot: bool, default=True\n    If True, plots a comparison of the specified metric for different models.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>best_model_type: str\n    The best model based on the specified metric.\ncomparison_result: pd.DataFrame\n    A DataFrame containing the comparison results of the two models based on the specified metric.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.predict_best", "kind": "function", "doc": "<p>A function to predict the best model's output.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>model: str\n    The model to use for prediction. Options: 'GAM Splines', 'Random Forest', 'Best Model'.\nX: pd.DataFrame, default=None\n    The data to predict on. If None, the function will use the training data.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>prediction: pd.DataFrame\n    A DataFrame containing the predictions, upper and lower bounds of the 90% confidence interval.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.plot_x_y", "kind": "function", "doc": "<p>Plots the dependent variable y against all the independent variables x.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>title: str, default=''\n    The title of the plot.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>None\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"fullname": "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "CurveNonParamFit.plot_best", "kind": "function", "doc": "<p>A function to plot the best model's predictions for both the Random Forest and GAM models families.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>title: str, default='Best Model Predictions'\n    The title of the plot.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>None\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Best Model Predictions&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor", "kind": "class", "doc": "<p>A wrapper class to define a Generalized Additive Model (GAM) regressor using pyGAM.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<ul>\n<li>model_type: str, default='linear'\nThe type of model to use for curve fitting. Options: 'linear', 'logistic', 'gamma'.</li>\n<li>n_splines: int, default=25\nThe number of splines to use in the model.</li>\n<li>lam: float, default=0.6\nThe regularization parameter to use in the model.</li>\n</ul>\n\n<h2 id=\"methods\">Methods:</h2>\n\n<ul>\n<li>fit(X, y): Fit the GAM model to the data.</li>\n<li>predict(X): Predict the output using the fitted model.</li>\n<li>get_params(): Get the parameters of the model.</li>\n<li>get_pygam_model(): Get the pyGAM model.</li>\n<li>set_params(**parameters): Set the parameters of the model.</li>\n</ul>\n\n<h2 id=\"raises\">Raises:</h2>\n\n<ul>\n<li>AssertionError: If the model type is not one of 'linear', 'logistic', or 'gamma'.</li>\n</ul>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.RegressorMixin"}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.__init__", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;linear&#39;</span>, </span><span class=\"param\"><span class=\"n\">n_splines</span><span class=\"o\">=</span><span class=\"mi\">25</span>, </span><span class=\"param\"><span class=\"n\">lam</span><span class=\"o\">=</span><span class=\"mf\">0.6</span></span>)</span>"}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.fit", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.fit", "kind": "function", "doc": "<p>Fit the GAM model to the data.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>X: np.array\n    The independent variables.\ny: np.array\n    The dependent variable.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>self: GAMRegressor\n    The fitted GAM model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.predict", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.predict", "kind": "function", "doc": "<p>Predict the output using the fitted model.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>X: np.array\n    The independent variables.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>ypred: np.array\n    The predicted output.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.get_params", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.get_params", "kind": "function", "doc": "<p>Get the parameters of the model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.get_pygam_model", "kind": "function", "doc": "<p>Get the pyGAM model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.set_params", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.set_params", "kind": "function", "doc": "<p>Set the parameters of the model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">parameters</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"fullname": "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request", "modulename": "reserves_demand.curve_nparam_fit", "qualname": "GAMRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit": {"fullname": "reserves_demand.curve_param_fit", "modulename": "reserves_demand.curve_param_fit", "kind": "module", "doc": "<p></p>\n"}, "reserves_demand.curve_param_fit.CurveParamFit": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit", "kind": "class", "doc": "<p>Class to fit a curve to a dataset using a variety of curve types.\nThe class uses a cross-validated approach to select the best curve type and the best set of variables.</p>\n\n<h6 id=\"the-class-supports-the-following-curve-types\">The class supports the following curve types:</h6>\n\n<blockquote>\n  <ul>\n  <li>Logistic</li>\n  <li>Reduced Logistic</li>\n  <li>Fixed Logistic</li>\n  <li>Double Exponential</li>\n  <li>Exponential</li>\n  <li>Fixed Exponential</li>\n  <li>Arctan</li>\n  <li>Linear</li>\n  </ul>\n</blockquote>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>data : pd.DataFrame\n    The dataset containing the dependent and independent variables.\ndep_var : str\n    The name of the dependent variable.\nmain_indep_var : str\n    The name of the main independent variable.\ndep_var_name : str, optional\n    The name of the dependent variable for plotting. Default is None.\nmain_indep_var_name : str, optional\n    The name of the main independent variable for plotting. Default is None.\nconstant : bool, optional\n    Whether to include a constant column in the independent variables. Default is True.\ncurves : list, optional\n    The list of curve types to consider. Default is None.\nQ : float, optional\n    The confidence level for the confidence interval. Default is 0.9.\nnFolds : int, optional\n    The number of folds for cross-validation. Default is 5.\nparallel : bool, optional\n    Whether to run cross-validation in parallel. Default is False.\nsearch_method : str, optional\n    The method to use for variable selection. Default is 'backward'. Available options are \n    - backward: Backward elimination removing variables that are not improving the prediction accuracy\n    - forward: Forward selection, adding variables only if they increase predictive power\n    - all_combinations: Exhaustive search testing all variable combinations and selecting the best\n</code></pre>\n\n<h2 id=\"methods\">Methods:</h2>\n\n<pre><code>cross_validate(curvename, on='RMSE')\n    Performs cross-validation to find the best combination of variables for the specified curve type.\nvariable_select(on='RMSE', verbose=True, plot=True)\n    Performs variable selection for each curve type and returns the best curve based on the specified metric.\nindep_vars_occurence(normalize=True, plot=True, title='')\n    Gives the number of occurrences of each independent variable in the best combinations of variables for each curve.\nfit_best_curves()\n    Fits the best curve for each curve type based on the selected variables.\ncompare_best_curves(plot=True, CI = True)\n    Compares the best curves for each curve type based on the performance metrics.\npredict_best_curve(curvename, X=None)\n    Predicts the dependent variable using the best curve for the specified curve type.\nmost_probable_value(curvename, known_value, verbose=True)\n    Estimates the most probable value of a dependent or independent variable using a fitted curve.\nplot_x_y(title ='')\n    Plots the dependent variable y against all the independent variables x.\nplot_curve_with_confidence_interval(ypred, yqlb=None, yqub=None, ax = None, title ='')\n    Plots the fitted curve along with the confidence interval.\n</code></pre>\n\n<h2 id=\"attributes\">Attributes:</h2>\n\n<pre><code>varselect_result : pd.DataFrame\n    The performance metrics for each curve type.\nbest_curves_params : dict\n    The parameters for each curve type.\n</code></pre>\n\n<h2 id=\"example\">Example:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">reserves_demand.curve_param_fit</span> <span class=\"kn\">import</span> <span class=\"n\">CurveParamFit</span>\n\n<span class=\"c1\"># Load the dataset</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s1\">&#39;../data/reserve_demand_cruve_data.csv&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initialize the CurveParamFit object</span>\n<span class=\"n\">curve_fit</span> <span class=\"o\">=</span> <span class=\"n\">CurveParamFit</span><span class=\"p\">(</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">dat</span><span class=\"p\">,</span> \n            <span class=\"n\">dep_var</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Normalized&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">main_indep_var</span><span class=\"o\">=</span> <span class=\"s1\">&#39;excess_reserve&#39;</span><span class=\"p\">,</span>\n            <span class=\"n\">dep_var_name</span><span class=\"o\">=</span> <span class=\"s1\">&#39;Normalized Overnight Rate&#39;</span><span class=\"p\">,</span>                 \n            <span class=\"n\">main_indep_var_name</span><span class=\"o\">=</span> <span class=\"s1\">&#39;Excess Reserve&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n<span class=\"c1\"># Perform variable selection for each curve</span>\n<span class=\"n\">best_curve</span><span class=\"p\">,</span> <span class=\"n\">varselect_result</span> <span class=\"o\">=</span> <span class=\"n\">curve_fit</span><span class=\"o\">.</span><span class=\"n\">variable_select</span><span class=\"p\">(</span><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fit the best curves</span>\n<span class=\"n\">best_curves_params</span> <span class=\"o\">=</span> <span class=\"n\">curve_fit</span><span class=\"o\">.</span><span class=\"n\">fit_best_curves</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Compare the best curves</span>\n<span class=\"n\">perf_metrics_df</span><span class=\"p\">,</span> <span class=\"n\">predictions_df</span><span class=\"p\">,</span> <span class=\"n\">param_df</span> <span class=\"o\">=</span> <span class=\"n\">curve_fit</span><span class=\"o\">.</span><span class=\"n\">compare_best_curves</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Predict the dependent variable using the best curve</span>\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">curve_fit</span><span class=\"o\">.</span><span class=\"n\">predict_best_curve</span><span class=\"p\">(</span><span class=\"n\">best_curve</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Estimate the most probable value of a variable</span>\n<span class=\"n\">known_value</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Normalized&#39;</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">most_probable_value</span> <span class=\"o\">=</span> <span class=\"n\">curve_fit</span><span class=\"o\">.</span><span class=\"n\">most_probable_value</span><span class=\"p\">(</span><span class=\"n\">best_curve</span><span class=\"p\">,</span> <span class=\"n\">known_value</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.__init__", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">constant</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">curves</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">Q</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">nFolds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">parallel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">search_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;backward&#39;</span></span>)</span>"}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.varselect_result", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.varselect_result", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.best_curves_params", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.cross_validate", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.cross_validate", "kind": "function", "doc": "<p>Performs cross-validation to find the best combination of variables for the specified curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used for fitting the data. This curve should be one of the supported curves.\non : str, optional\n    The performance metric to use for comparison. Default is 'RMSE'.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>best_combination : list\n    The best combination of independent variables for the specified curve type.\nbest_train_metrics : dict\n    The performance metrics on the training set for the best combination.\nbest_validation_metrics : dict\n    The performance metrics on the validation set for the best combination.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.variable_select", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.variable_select", "kind": "function", "doc": "<p>Performs variable selection for each curve type and returns the best curve based on the specified metric.\nThe function also returns the performance metrics for each curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>on : str, optional\n    The performance metric to use for comparison. Default is 'RMSE'.\nverbose : bool, optional\n    Whether to print the results. Default is True.\nplot : bool, optional\n    Whether to plot the performance comparison. Default is True.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>best_curve : str\n    The best curve based on the specified metric.\nvarselect_result : pd.DataFrame\n    The performance metrics for each curve type.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.indep_vars_occurence", "kind": "function", "doc": "<p>Gives the number of occurences of each independent variable in the best combinations of variables for each curve.\nThe function can be used to identify the most important variables in the dataset.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>normalize : bool, optional\n    Whether to normalize the occurrences as a percentage. Default is True.\nplot : bool, optional\n    Whether to plot the occurrences. Default is True.\ntitle : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>variable_percentage : pd.Series\n    The percentage of occurrence of each independent variable in the best combinations.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.fit_best_curves", "kind": "function", "doc": "<p>Fits the best curve for each curve type based on the selected variables.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.compare_best_curves", "kind": "function", "doc": "<p>Compares the best curves for each curve type based on the performance metrics.\nThe function also returns the performance metrics, the predictions, and the parameters for each curve type.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>plot : bool, optional\n    Whether to plot the best curves. Default is True.\nCI : bool, optional\n    Whether to plot the confidence interval. Default is True.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>perf_metrics_df : pd.DataFrame\n    The performance metrics for each curve type.\npredictions_df : pd.DataFrame\n    The predictions for each curve type.\nparam_df : pd.DataFrame\n    The parameters for each curve type.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">CI</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.predict_best_curve", "kind": "function", "doc": "<p>Predicts the dependent variable using the best curve for the specified curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used to obtain the prediction. This curve should already be fitted\n    and should correspond to one of the curves supported by the system.\nX : pd.DataFrame, optional\n    The independent variables to use for prediction. Default is None.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>prediction : pd.DataFrame\n    A DataFrame containing the predicted dependent variable along with the confidence interval.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.most_probable_value", "kind": "function", "doc": "<p>Estimates the most probable value of a dependent or independent variable using a fitted curve,\nbased on a provided known value. \nThis method performs linear interpolation between the closest data points or uses boundary values\nif the known value exceeds the available data range.</p>\n\n<p>This function is particularly useful when you have a value of one variable and need to estimate\nthe corresponding value of another variable based on the relationship defined by the specified curve.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used to obtain the prediction. This curve should already be fitted\n    and should correspond to one of the curves supported by the system.\n\nknown_value : tuple\n    A tuple containing:\n    - The name of the variable (str) for which the value is known.\n    - The known value (float) of that variable.\n\n    The variable name must be one of the dependent or main independent variables used in the model.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>float\n    The estimated value of the other variable. This could be an interpolated value between data points\n    or a boundary value if the known value is outside the range of the available data.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">known_value</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.plot_x_y", "kind": "function", "doc": "<p>Plots the dependent variable y against all the independent variables x.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>title : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>None\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"fullname": "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval", "modulename": "reserves_demand.curve_param_fit", "qualname": "CurveParamFit.plot_curve_with_confidence_interval", "kind": "function", "doc": "<p>Plots the fitted curve along with the confidence interval.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>ypred : pd.Series\n    The predicted dependent variable.\nyqlb : pd.Series, optional\n    The lower bound of the confidence interval. Default is None.\nyqub : pd.Series, optional\n    The upper bound of the confidence interval. Default is None.\nax : plt.Axes, optional\n    The axes to use for plotting. Default is None.\ntitle : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>ax : plt.Axes\n    The axes used for plotting.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ypred</span>, </span><span class=\"param\"><span class=\"n\">yqlb</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">yqub</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit": {"fullname": "reserves_demand.curve_paramadd_fit", "modulename": "reserves_demand.curve_paramadd_fit", "kind": "module", "doc": "<p></p>\n"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit", "kind": "class", "doc": "<p>Class to fit a curve to a dataset using a variety of curve types.\nThe class uses a cross-validated approach to select the best curve type and the best set of variables.</p>\n\n<h6 id=\"the-class-supports-the-following-curve-types\">The class supports the following curve types:</h6>\n\n<blockquote>\n  <ul>\n  <li>Logistic</li>\n  <li>Reduced Logistic</li>\n  <li>Fixed Logistic</li>\n  <li>Double Exponential</li>\n  <li>Exponential</li>\n  <li>Fixed Exponential</li>\n  <li>Arctan</li>\n  <li>Linear</li>\n  </ul>\n</blockquote>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>data : pd.DataFrame\n    The dataset containing the dependent and independent variables.\ndep_var : str\n    The name of the dependent variable.\nmain_indep_var : str\n    The name of the main independent variable.\ndep_var_name : str, optional\n    The name of the dependent variable for plotting. Default is None.\nmain_indep_var_name : str, optional\n    The name of the main independent variable for plotting. Default is None.\nconstant : bool, optional\n    Whether to include a constant column in the independent variables. Default is True.\ncurves : list, optional\n    The list of curve types to consider. Default is None.\nQ : float, optional\n    The confidence level for the confidence interval. Default is 0.9.\nnFolds : int, optional\n    The number of folds for cross-validation. Default is 5.\nparallel : bool, optional\n    Whether to run cross-validation in parallel. Default is False.\nsearch_method : str, optional\n    The method to use for variable selection. Default is 'backward'.\n</code></pre>\n\n<h2 id=\"methods\">Methods:</h2>\n\n<pre><code>cross_validate(curvename, on='RMSE'):\n    Performs cross-validation to find the best combination of variables for the specified curve type.\nvariable_select(on='RMSE', verbose=True, plot=True):\n    Performs variable selection for each curve type and returns the best curve based on the specified metric.\nindep_vars_occurence(normalize=True, plot=True, title=''):\n    Gives the number of occurrences of each independent variable in the best combinations of variables for each curve.\nfit_best_curves():\n    Fits the best curve for each curve type based on the selected variables.\ncompare_best_curves(plot=True, CI = True):\n    Compares the best curves for each curve type based on the performance metrics.\npredict_best_curve(curvename, X=None):\n    Predicts the dependent variable using the best curve for the specified curve type.\nmost_probable_value(curvename, known_value, verbose=True):\n    Estimates the most probable value of a dependent or independent variable using a fitted curve.\nplot_x_y(title =''):\n    Plots the dependent variable y against all the independent variables x.\nplot_curve_with_confidence_interval(ypred, yqlb=None, yqub=None, ax = None, title =''):\n    Plots the fitted curve along with the confidence interval.\n</code></pre>\n\n<h2 id=\"attributes\">Attributes:</h2>\n\n<pre><code>varselect_result : pd.DataFrame\n    The performance metrics for each curve type.\nbest_curves_params : dict\n    The parameters for each curve type.\n</code></pre>\n"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">main_indep_var_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">curves</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">Q</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9</span>,</span><span class=\"param\">\t<span class=\"n\">nFolds</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">parallel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">search_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;backward&#39;</span></span>)</span>"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.varselect_result", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.best_curves_params", "kind": "variable", "doc": "<p></p>\n"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.cross_validate", "kind": "function", "doc": "<p>Performs cross-validation to find the best combination of variables for the specified curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used for fitting the data. This curve should be one of the supported curves.\non : str, optional\n    The performance metric to use for comparison. Default is 'RMSE'.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>best_combination : list\n    The best combination of independent variables for the specified curve type.\nbest_train_metrics : dict\n    The performance metrics on the training set for the best combination.\nbest_validation_metrics : dict\n    The performance metrics on the validation set for the best combination.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.variable_select", "kind": "function", "doc": "<p>Performs variable selection for each curve type and returns the best curve based on the specified metric.\nThe function also returns the performance metrics for each curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>on : str, optional\n    The performance metric to use for comparison. Default is 'RMSE'.\nverbose : bool, optional\n    Whether to print the results. Default is True.\nplot : bool, optional\n    Whether to plot the performance comparison. Default is True.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>best_curve : str\n    The best curve based on the specified metric.\nvarselect_result : pd.DataFrame\n    The performance metrics for each curve type.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">&#39;RMSE&#39;</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.indep_vars_occurence", "kind": "function", "doc": "<p>Gives the number of occurences of each independent variable in the best combinations of variables for each curve.\nThe function can be used to identify the most important variables in the dataset.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>normalize : bool, optional\n    Whether to normalize the occurrences as a percentage. Default is True.\nplot : bool, optional\n    Whether to plot the occurrences. Default is True.\ntitle : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>variable_percentage : pd.Series\n    The percentage of occurrence of each independent variable in the best combinations.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.fit_best_curves", "kind": "function", "doc": "<p>Fits the best curve for each curve type based on the selected variables.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.compare_best_curves", "kind": "function", "doc": "<p>Compares the best curves for each curve type based on the performance metrics.\nThe function also returns the performance metrics, the predictions, and the parameters for each curve type.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>plot : bool, optional\n    Whether to plot the best curves. Default is True.\nCI : bool, optional\n    Whether to plot the confidence interval. Default is True.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>perf_metrics_df : pd.DataFrame\n    The performance metrics for each curve type.\npredictions_df : pd.DataFrame\n    The predictions for each curve type.\nparam_df : pd.DataFrame\n    The parameters for each curve type.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">CI</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.predict_best_curve", "kind": "function", "doc": "<p>Predicts the dependent variable using the best curve for the specified curve type.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used to obtain the prediction. This curve should already be fitted\n    and should correspond to one of the curves supported by the system.\nX : pd.DataFrame, optional\n    The independent variables to use for prediction. Default is None.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>prediction : pd.DataFrame\n    A DataFrame containing the predicted dependent variable along with the confidence interval.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.most_probable_value", "kind": "function", "doc": "<p>Estimates the most probable value of a dependent or independent variable using a fitted curve,\nbased on a provided known value. \nThis method performs linear interpolation between the closest data points or uses boundary values\nif the known value exceeds the available data range.</p>\n\n<p>This function is particularly useful when you have a value of one variable and need to estimate\nthe corresponding value of another variable based on the relationship defined by the specified curve.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<pre><code>curvename : str\n    The name of the curve used to obtain the prediction. This curve should already be fitted\n    and should correspond to one of the curves supported by the system.\n\nknown_value : tuple\n    A tuple containing:\n    - The name of the variable (str) for which the value is known.\n    - The known value (float) of that variable.\n\n    The variable name must be one of the dependent or main independent variables used in the model.\n</code></pre>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<pre><code>float\n    The estimated value of the other variable. This could be an interpolated value between data points\n    or a boundary value if the known value is outside the range of the available data.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">curvename</span>, </span><span class=\"param\"><span class=\"n\">known_value</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.plot_x_y", "kind": "function", "doc": "<p>Plots the dependent variable y against all the independent variables x.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>title : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>None\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"fullname": "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval", "modulename": "reserves_demand.curve_paramadd_fit", "qualname": "CurveParamAdditiveFit.plot_curve_with_confidence_interval", "kind": "function", "doc": "<p>Plots the fitted curve along with the confidence interval.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<pre><code>ypred : pd.Series\n    The predicted dependent variable.\nyqlb : pd.Series, optional\n    The lower bound of the confidence interval. Default is None.\nyqub : pd.Series, optional\n    The upper bound of the confidence interval. Default is None.\nax : plt.Axes, optional\n    The axes to use for plotting. Default is None.\ntitle : str, optional\n    The title of the plot. Default is ''.\n</code></pre>\n\n<h2 id=\"returns\">Returns</h2>\n\n<pre><code>ax : plt.Axes\n    The axes used for plotting.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ypred</span>, </span><span class=\"param\"><span class=\"n\">yqlb</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">yqub</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.utils": {"fullname": "reserves_demand.utils", "modulename": "reserves_demand.utils", "kind": "module", "doc": "<p></p>\n"}, "reserves_demand.utils.evaluate_metrics": {"fullname": "reserves_demand.utils.evaluate_metrics", "modulename": "reserves_demand.utils", "qualname": "evaluate_metrics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_true</span>, </span><span class=\"param\"><span class=\"n\">y_pred</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.utils.mis": {"fullname": "reserves_demand.utils.mis", "modulename": "reserves_demand.utils", "qualname": "mis", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">yqlb</span>, </span><span class=\"param\"><span class=\"n\">yqub</span>, </span><span class=\"param\"><span class=\"n\">Q</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "reserves_demand.utils.perf_metrics": {"fullname": "reserves_demand.utils.perf_metrics", "modulename": "reserves_demand.utils", "qualname": "perf_metrics", "kind": "function", "doc": "<p>Computes performance metrics for the fitted curve.\nThe performance metrics include \n    RMSE: Root Mean Squared Error\n    MAE: Mean Absolute Error\n    MAPE: Mean Absolute Percentage Error\n    R2: R-squared\n    MSLE: Mean Squared Log Error\n    MedianAE: Median Absolute Error\n    MIS: Mean Interval Score</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">ypred</span>, </span><span class=\"param\"><span class=\"n\">yqlb</span>, </span><span class=\"param\"><span class=\"n\">yqub</span>, </span><span class=\"param\"><span class=\"n\">q</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"reserves_demand": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 474}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 101}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 105}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 117}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 79}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 39}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 49}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 170}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 3}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 44}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 9}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 9}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "reserves_demand.curve_param_fit": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_param_fit.CurveParamFit": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 965}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 210, "bases": 0, "doc": 3}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 117}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 110}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 106}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 109}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 94}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 205}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 42}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 100}, "reserves_demand.curve_paramadd_fit": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 482}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 192, "bases": 0, "doc": 3}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 117}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 110}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 106}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 16}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 109}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 94}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 205}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 42}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"qualname": 6, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 100}, "reserves_demand.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "reserves_demand.utils.evaluate_metrics": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "reserves_demand.utils.mis": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "reserves_demand.utils.perf_metrics": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 43}}, "length": 54, "save": true}, "index": {"qualname": {"root": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 4, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 12}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 14}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 3, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils.evaluate_metrics": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils.mis": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 3}, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 3}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.evaluate_metrics": {"tf": 1}}, "df": 1}}}}}}}}}}, "fullname": {"root": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand": {"tf": 1}, "reserves_demand.curve_nparam_fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils": {"tf": 1}, "reserves_demand.utils.evaluate_metrics": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 54}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand": {"tf": 1}, "reserves_demand.curve_nparam_fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils": {"tf": 1}, "reserves_demand.utils.evaluate_metrics": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 54}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 49, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 12}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13}}}}}}}}}}}}}}}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 6}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 21}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 49}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 4}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 14}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 3, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils.evaluate_metrics": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils.mis": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_param_fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 14, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_paramadd_fit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 14}}}}}}}, "y": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 3}, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils": {"tf": 1}, "reserves_demand.utils.evaluate_metrics": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.evaluate_metrics": {"tf": 1}}, "df": 1}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}, "2": {"5": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 16}, "docs": {}, "df": 0}, "5": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}, "6": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}, "9": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}, "docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 9.38083151964686}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 5.0990195135927845}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 5.0990195135927845}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 6}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 4.69041575982343}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 4.47213595499958}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 5.0990195135927845}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 5.477225575051661}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 4.242640687119285}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 3.7416573867739413}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 4.242640687119285}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 3.1622776601683795}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 4}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 12.84523257866513}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 4.898979485566356}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 6}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 6}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 5.0990195135927845}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 4.69041575982343}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 5.0990195135927845}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 4.47213595499958}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 6.928203230275509}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 12.24744871391589}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 4.898979485566356}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 6}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 6}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 3.1622776601683795}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 5.0990195135927845}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 4.69041575982343}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 5.0990195135927845}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 4.47213595499958}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 6.928203230275509}, "reserves_demand.utils.evaluate_metrics": {"tf": 3.7416573867739413}, "reserves_demand.utils.mis": {"tf": 4.69041575982343}, "reserves_demand.utils.perf_metrics": {"tf": 5.0990195135927845}}, "df": 37, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.4142135623730951}}, "df": 3}, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 7}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.utils.evaluate_metrics": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 2}}, "df": 3}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 7}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 2.23606797749979}}, "df": 4}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 29}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}}, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 10}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.utils.evaluate_metrics": {"tf": 1}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 8}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 5}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.utils.evaluate_metrics": {"tf": 1.4142135623730951}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 3}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1}, "reserves_demand.utils.mis": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 4}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 2}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"3": {"6": {"2": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3}, "1": {"0": {"0": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"0": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"5": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}, "docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "3": {"6": {"2": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.7416573867739413}}, "df": 1}, "docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "5": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}, "6": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}, "8": {"6": {"1": {"7": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}}, "df": 1}, "docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}, "docs": {"reserves_demand": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 10.14889156509222}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_gam": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_rf": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.best_model_type": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 7.280109889280518}, "reserves_demand.curve_nparam_fit.GAMRegressor.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 4.123105625617661}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 9}, "reserves_demand.curve_param_fit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 19}, "reserves_demand.curve_param_fit.CurveParamFit.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.varselect_result": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.best_curves_params": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 4.69041575982343}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 4.69041575982343}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 4.58257569495584}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 4.69041575982343}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 4.47213595499958}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 4.69041575982343}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 4.242640687119285}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 4.795831523312719}, "reserves_demand.curve_paramadd_fit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 8.48528137423857}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.__init__": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.varselect_result": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.best_curves_params": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 4.69041575982343}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 4.69041575982343}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 4.58257569495584}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 4.69041575982343}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 4.47213595499958}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 4.69041575982343}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 4.242640687119285}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 4.795831523312719}, "reserves_demand.utils": {"tf": 1.7320508075688772}, "reserves_demand.utils.evaluate_metrics": {"tf": 1.7320508075688772}, "reserves_demand.utils.mis": {"tf": 1.7320508075688772}, "reserves_demand.utils.perf_metrics": {"tf": 1.4142135623730951}}, "df": 54, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2}}, "df": 8}}, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 6.557438524302}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 3.1622776601683795}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 3.1622776601683795}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 3.4641016151377544}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 2.6457513110645907}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 3.872983346207417}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 7.0710678118654755}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 3.872983346207417}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 3.3166247903554}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 3.3166247903554}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 3.3166247903554}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 4.898979485566356}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 6.4031242374328485}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 3.872983346207417}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 3.1622776601683795}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 4.898979485566356}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 3.3166247903554}, "reserves_demand.utils.perf_metrics": {"tf": 1.4142135623730951}}, "df": 35, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}}, "df": 1}, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 25}, "w": {"docs": {}, "df": 0, "o": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 3, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 15, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}}, "df": 3}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}}, "df": 13}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 5}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 5.744562646538029}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 4.47213595499958}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 21, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 10}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 4, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2.23606797749979}}, "df": 4, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 10}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 9}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 3}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 3}}, "i": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "v": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 2}}, "df": 21}, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 9, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 16}}}}}}}}}, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 10}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 10}, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 11}, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 5}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 11}}}}, "p": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 12}}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 4}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.7416573867739413}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 3.605551275463989}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 25, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 14}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "a": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2.449489742783178}}, "df": 16, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 17}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 6}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 6}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 3}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1.4142135623730951}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "x": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 2}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 14}}, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.7320508075688772}}, "df": 10}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1.4142135623730951}}, "df": 2}, "e": {"docs": {}, "df": 0, "w": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 31}}}}}, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.utils.perf_metrics": {"tf": 1.4142135623730951}}, "df": 13}}}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 8}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}}, "df": 6}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 5}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 2, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 16, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 15}, "y": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1, "a": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.7320508075688772}}, "df": 11}}}}}, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}}, "df": 6, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 3, "t": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 13}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 2}}, "df": 24}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.7320508075688772}}, "df": 3}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 4.69041575982343}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 3.4641016151377544}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 14, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 2}, "reserves_demand.utils.perf_metrics": {"tf": 1.4142135623730951}}, "df": 11}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 2.23606797749979}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 5}}, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 2}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_pygam_model": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 3.1622776601683795}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1.4142135623730951}}, "df": 7, "m": {"docs": {}, "df": 0, "a": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "v": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 4}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}}, "df": 9}}}}, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}}, "df": 4}}}, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 12}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}}, "df": 10, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 23, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "r": {"2": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 2}, "docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 5}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}}, "df": 1}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 26}, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 5, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.7320508075688772}}, "df": 7}}}, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 3, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 3.4641016151377544}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 3.4641016151377544}}, "df": 4, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 4}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2.6457513110645907}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 3.3166247903554}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 17, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 18}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.GAMRegressor.get_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_params": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 2.23606797749979}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 3.7416573867739413}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 3.1622776601683795}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 3.605551275463989}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 3.1622776601683795}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.7320508075688772}}, "df": 24}, "n": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2.449489742783178}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.449489742783178}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 17, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.7320508075688772}}, "df": 7}, "l": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2}}, "df": 6, "g": {"docs": {}, "df": 0, "/": {"3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 2}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 2}}, "df": 16}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}}, "df": 2, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 2.23606797749979}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 2}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 12}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.7320508075688772}}, "df": 10, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 4.58257569495584}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 4.795831523312719}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 2.6457513110645907}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 3.4641016151377544}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}}, "df": 20}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_best": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.compare_models": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 1.4142135623730951}}, "df": 12}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1.4142135623730951}}, "df": 7}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 6}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.cross_validate": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.cross_validate": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "f": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_gam": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.tune_rf": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 3, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 4}, "d": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 2.8284271247461903}, "reserves_demand.curve_param_fit.CurveParamFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.compare_best_curves": {"tf": 2.23606797749979}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 2.6457513110645907}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.variable_select": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.indep_vars_occurence": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.fit_best_curves": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.compare_best_curves": {"tf": 2.23606797749979}}, "df": 10}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"reserves_demand.utils.perf_metrics": {"tf": 2.23606797749979}}, "df": 1}}}}}, "x": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.predict_best": {"tf": 1}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.predict_best_curve": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 12}, "y": {"docs": {"reserves_demand.curve_nparam_fit.CurveNonParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_nparam_fit.CurveNonParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor": {"tf": 1}, "reserves_demand.curve_nparam_fit.GAMRegressor.fit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_param_fit.CurveParamFit.plot_x_y": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1.4142135623730951}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_x_y": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.predict": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 5}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "b": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_param_fit.CurveParamFit.plot_curve_with_confidence_interval": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.plot_curve_with_confidence_interval": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 1}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"reserves_demand.curve_nparam_fit.GAMRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1.7320508075688772}, "reserves_demand.curve_param_fit.CurveParamFit.most_probable_value": {"tf": 2.449489742783178}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit.most_probable_value": {"tf": 2.449489742783178}}, "df": 4}}}}}, "q": {"docs": {"reserves_demand.curve_param_fit.CurveParamFit": {"tf": 1}, "reserves_demand.curve_paramadd_fit.CurveParamAdditiveFit": {"tf": 1}}, "df": 2}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();